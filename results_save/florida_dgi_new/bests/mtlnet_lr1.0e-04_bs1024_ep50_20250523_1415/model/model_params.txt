{'model': {'name': 'MTLNet', 'type': 'MTL'}, 'training': {'folds': 5, 'tasks': ['next', 'category'], 'dates': {'start': '20250523_1415', 'end': '20250523_144303'}}, 'datasets': [{'raw_data': '/Users/vitorhugo/Desktop/mestrado/PoiMtlNet/data/output/florida_dgi_new/pre-processing/next-input.csv', 'description': 'Data related to next POI prediction. Data with 107 features', 'folds_signature': None}, {'raw_data': '/Users/vitorhugo/Desktop/mestrado/PoiMtlNet/data/output/florida_dgi_new/pre-processing/category-input.csv', 'description': 'Data related to category prediction. Data with 107 features', 'folds_signature': None}], 'flops': {'flops': 42271232, 'params': 2644559, 'memory': [], 'inference_time': [], 'training_time': []}, 'hyperparameters': {'batch_size': 1024, 'num_epochs': 50, 'learning_rate': 0.0001, 'optimizer': 'AdamW', 'optimizer_state': {'state': {}, 'param_groups': [{'lr': 3.9999999999999996e-05, 'betas': (0.95, 0.999), 'eps': 1e-08, 'weight_decay': 0.0001, 'amsgrad': False, 'foreach': None, 'maximize': False, 'capturable': False, 'differentiable': False, 'fused': None, 'initial_lr': 4e-05, 'max_lr': 0.001, 'min_lr': 4e-09, 'max_momentum': 0.95, 'base_momentum': 0.85, 'params': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119]}]}, 'scheduler': 'OneCycleLR', 'scheduler_state': {'total_steps': 6050, '_schedule_phases': [{'end_step': 1814.0, 'start_lr': 'initial_lr', 'end_lr': 'max_lr', 'start_momentum': 'max_momentum', 'end_momentum': 'base_momentum'}, {'end_step': 6049, 'start_lr': 'max_lr', 'end_lr': 'min_lr', 'start_momentum': 'base_momentum', 'end_momentum': 'max_momentum'}], '_anneal_func_type': 'cos', 'cycle_momentum': True, 'use_beta1': True, 'base_lrs': [4e-05], 'last_epoch': 0, 'verbose': False, '_step_count': 1, '_get_lr_called_within_step': False, '_last_lr': [3.9999999999999996e-05]}, 'criterion': {'mtl': 'NashMTL', 'next': 'CrossEntropyLoss', 'category': 'CrossEntropyLoss'}, 'criterion_state': {'mtl': {}, 'next': OrderedDict([('weight', tensor([1.3735, 1.7233, 0.5829, 3.3139, 1.9827, 0.6593, 0.6049],
       device='mps:0'))]), 'category': OrderedDict()}}}